---
test_pod:
  image: bats/bats:v1.1.0
  pullPolicy: IfNotPresent
loki:
  enabled: true
  isDefault: true
  url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  datasource:
    jsonData: {}
    uid: ""
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: http-metrics
  podManagementPolicy: OrderedReady
  rbac:
    create: true
    pspEnabled: true
  replicas: 1
  resources: {}
  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001
  containerSecurityContext:
    readOnlyRootFilesystem: true
  serviceAccount:
    create: true
    name: null
    annotations: {}
    automountServiceAccountToken: true
  terminationGracePeriodSeconds: 4800
  tolerations: []
  topologySpreadConstraints:
    enabled: false
  podDisruptionBudget: {}
  updateStrategy:
    type: RollingUpdate
  serviceMonitor:
    enabled: false
    interval: ""
    additionalLabels: {}
    annotations: {}
    prometheusRule:
      enabled: false
      additionalLabels: {}
      rules: []
  initContainers: []
  extraContainers: []
  extraVolumes: []
  extraVolumeMounts: []
  extraPorts: []
  env: []
  alerting_groups: []
  useExistingAlertingGroup:
    enabled: false
    configmapName: ""
promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://demo-grafana-loki:3100/loki/api/v1/push
fluent-bit:
  enabled: false
grafana:
  enabled: true
  sidecar:
    datasources:
      enabled: true
      maxLines: 1000
  image:
    tag: 8.3.5
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboardsConfigMaps:
    default: grafana-dashboards
  grafana.ini:
    auth.ldap:
      enabled: true
      allow_sign_up: true
      config_file: /etc/grafana/ldap.toml
prometheus:
  enabled: false
  isDefault: false
  url: http://{{ include "prometheus.fullname" .}}:{{
    .Values.prometheus.server.service.servicePort }}{{
    .Values.prometheus.server.prefixURL }}
  datasource:
    jsonData: {}
filebeat:
  enabled: false
  filebeatConfig:
    filebeat.yml: |
      # logging.level: debug
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
      output.logstash:
        hosts: ["logstash-loki:5044"]
logstash:
  enabled: false
  image: grafana/logstash-output-loki
  imageTag: 1.0.1
  filters:
    main: |-
      filter {
        if [kubernetes] {
          mutate {
            add_field => {
              "container_name" => "%{[kubernetes][container][name]}"
              "namespace" => "%{[kubernetes][namespace]}"
              "pod" => "%{[kubernetes][pod][name]}"
            }
            replace => { "host" => "%{[kubernetes][node][name]}"}
          }
        }
        mutate {
          remove_field => ["tags"]
        }
      }
  outputs:
    main: |-
      output {
        loki {
          url => "http://loki:3100/loki/api/v1/push"
          #username => "test"
          #password => "test"
        }
        # stdout { codec => rubydebug }
      }
proxy:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""
